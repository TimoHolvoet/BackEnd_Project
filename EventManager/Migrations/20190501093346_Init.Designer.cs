// <auto-generated />
using System;
using EventManager.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventManager.API.Migrations
{
    [DbContext(typeof(EventManagerDBContext))]
    [Migration("20190501093346_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventManager.WebApp.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<string>("Genre");

                    b.Property<string>("ImageUrl");

                    b.Property<Guid>("LocationId");

                    b.Property<string>("Name");

                    b.Property<int>("SoldTickets");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dd18d55-6beb-4c48-bbd8-d671a29fdbbd"),
                            Capacity = 1000,
                            Date = new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "EventDescription1",
                            Genre = "EventGenre1",
                            ImageUrl = "Fakelink1.png",
                            LocationId = new Guid("9b6069c4-bc37-4354-9e59-d9dd01641709"),
                            Name = "EventName1",
                            SoldTickets = 400
                        });
                });

            modelBuilder.Entity("EventManager.WebApp.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b6069c4-bc37-4354-9e59-d9dd01641709"),
                            Latitude = 50.819476999999999,
                            Longitude = 3.2577259999999999
                        });
                });

            modelBuilder.Entity("EventManager.WebApp.Models.Event", b =>
                {
                    b.HasOne("EventManager.WebApp.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
